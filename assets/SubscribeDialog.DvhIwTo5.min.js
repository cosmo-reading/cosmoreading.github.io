import {
    f as r,
    cL as te,
    j as a,
    cm as se,
    cM as le,
    bz as ie,
    dr as ne,
    aE as re,
    er as Qe,
    es as $e,
    bk as be,
    g as Ne,
    b_ as ze,
    a7 as Le,
    ch as He,
    be as Je,
    r as i,
    x as Xe,
    et as T,
    eu as ae,
    ev as Ze,
    y as Me,
    ew as R,
    an as E,
    ex as q,
    ey as z,
    ez as ea,
    eA as aa,
    eB as ta,
    eC as xe,
    bI as he,
    bt as sa,
    as as H,
    cy as la,
    aq as ia,
    e as na,
    eD as ra,
    v as ca,
    e7 as ve,
    cl as oa,
    h as da,
    bP as ye,
    cp as J,
    t as L,
    e5 as we,
    eE as pa
} from "./app.BSN4W8HM.min.js";
import {
    P as fa
} from "./paypal.payments.B8nRJeA3.min.js";
import {
    C as ua
} from "./checkbox.D8ZC8vMF.min.js";
import {
    P as ma,
    D as ge,
    b as xa
} from "./payments.selection.CdCVb7_g.min.js";
import {
    b as ha,
    P as va
} from "./backoff.yNU9w_Gi.min.js";
import {
    w as ya
} from "./WithProtectedRedirect.BywjySER.min.js";
import {
    g as wa
} from "./stripe.BB0w4sOZ.min.js";

function ga({
    open: t,
    onClose: s
}) {
    return r(re, {
        fullWidth: !0,
        open: t,
        onClose: s,
        PaperProps: {
            className: "dark:!bg-[#202020]",
            style: {
                maxWidth: "480px"
            }
        },
        children: [r(te, {
            className: "flex items-center justify-between py-[20px] pl-[20px] pr-[11px]",
            children: [a("span", {
                className: "text-[21px] font-bold",
                children: "Refund Policy"
            }), a(se, {
                onClick: s,
                className: "cursor-pointer text-[#777]"
            })]
        }), r(le, {
            className: "mb-[10px] space-y-[10px] p-[20px] text-[14px] leading-[21px] text-[#666] dark:text-[#BDBDBD]",
            children: [r("p", {
                children: [a("span", {
                    className: "font-bold",
                    children: "Digital subscriptions are normally not eligible for refunds, and general policy is that all sales are final."
                }), " ", "If you would like a refund for a digital subscription you may contact us through our", " ", a("a", {
                    className: "underline",
                    href: "https://wuxiaworld.atlassian.net/servicedesk/customer/portals",
                    target: "_blank",
                    rel: "noreferrer noopener",
                    children: "customer support page"
                }), "."]
            }), a("p", {
                children: "Please include your site username and the email address associated with your account. Refund requests will be assessed and considered based on each individual caseâ€™s circumstances."
            }), a("p", {
                children: "Wuxiaworld may but is under no obligation to issue a refund for reasons including (but not limited to):"
            }), r("ul", {
                className: "list-inside list-disc",
                children: [a("li", {
                    children: "A change of mind"
                }), a("li", {
                    children: "Accidental purchase"
                }), a("li", {
                    children: "No longer requiring the subscription"
                }), a("li", {
                    children: "Goodwill requests"
                })]
            }), a("p", {
                children: "If a refund request is accepted, the funds will be sent to the original payment method used."
            }), a("p", {
                children: "In general, refund requests for digital subscriptions will only be approved in cases where a translator/translation team has not met their weekly translation commitment for two weeks in the same month. This does not apply if you subscribe during a period of less frequent releases after the translator has given advance forewarning."
            })]
        }), a(ne, {
            className: "!space-x-[10px] px-[20px] pb-[20px] pt-0",
            children: a(ie, {
                className: "min-h-[36px] min-w-[94px] !text-[13px] !font-semibold",
                variant: "contained",
                onClick: s,
                children: "Ok"
            })
        })]
    })
}
var ba = {
    name: "1sy9iaq",
    styles: "body{overflow:hidden;}"
};

function Na() {
    return Qe.createPortal(r(Ne, {
        children: [a($e, {
            styles: ba
        }), a("div", {
            className: "fixed top-0 left-0 right-0 bottom-0 z-[1401] h-full w-full overflow-hidden bg-black bg-opacity-50"
        }), a("div", {
            className: "fixed top-0 left-0 right-0 bottom-0 z-[1402] overflow-hidden px-[30px]",
            children: a("div", {
                className: "flex h-full w-full items-center justify-center",
                children: r("div", {
                    className: "flex flex-col items-center justify-center space-y-[30px]",
                    children: [a(be, {
                        className: "text-white"
                    }), a("p", {
                        className: "text-center font-extrabold text-white",
                        children: "Please wait, your request is being processed"
                    })]
                })
            })
        })]
    }), document.body)
}

function ka({
    opened: t,
    onClose: s,
    cancelOpened: c,
    onCancelClose: o,
    plan: n,
    subscription: C,
    selectedPaymentMethod: P,
    onSubscribe: I,
    onProcessingStateChange: g
}) {
    var de, pe, fe;
    const x = ze(),
        {
            user: B,
            refreshUser: K
        } = Le(),
        {
            grpcRequest: b
        } = He(),
        {
            MuiButton: N
        } = Je("MuiButton"),
        [Ce, Pe] = i.useState(null),
        [Ie, Se] = i.useState(!1),
        [w, h] = i.useState(!1),
        [u, Be] = i.useState(P || null),
        [l, j] = i.useState(C || null),
        [De, W] = i.useState(!1),
        [Ae, _] = i.useState(!1),
        [ce, Re] = i.useState(!1),
        [Ee, X] = i.useState(!1),
        [qe, oe] = i.useState(!1),
        S = Ca(l || null, n),
        Z = Xe(Ze, {
            plan: T.is(n) ? {
                oneofKind: "vipPlanId",
                vipPlanId: n.id
            } : ae.is(n) ? {
                oneofKind: "sponsorPlan",
                sponsorPlan: {
                    planId: n == null ? void 0 : n.id,
                    novelId: (de = n == null ? void 0 : n.novelInfo) == null ? void 0 : de.id
                }
            } : void 0,
            paymentGateway: (u == null ? void 0 : u.gateway) ? ? (P == null ? void 0 : P.gateway),
            isUpgrade: (l == null ? void 0 : l.active) ? ? !1
        }),
        {
            data: v
        } = Me(R, e => e.getSubscriptionCost, Z, ["sponsor-subscription-cost", n.id], {
            cacheTime: 0,
            staleTime: 0,
            refetchOnWindowFocus: !1,
            enabled: t && !!u
        }),
        D = i.useCallback(e => {
            E(() => {
                Pe(e || null), Se(!!e), h(!1)
            })
        }, []),
        F = i.useCallback((e, d) => {
            switch (E(() => {
                X(!1), h(!1), j(e)
            }), e.type) {
                case q.SponsorSubscription:
                    x.invalidateQueries(["subscriptions", z.Sponsor]), x.invalidateQueries(["advance-chapters"]), x.invalidateQueries(["payment-methods"]);
                    break;
                case q.VipSubscription:
                    x.invalidateQueries(["subscriptions", z.Vip]), K();
                    break
            }
            g == null || g(!1), I == null || I(e, d), s()
        }, [s, g, I, x, K]),
        M = i.useCallback(e => {
            ha(async () => {
                var U, G, V;
                const y = pa.create({
                        id: e == null ? void 0 : e.id,
                        type: ((U = e == null ? void 0 : e.plan) == null ? void 0 : U.plan.oneofKind) === "sponsor" ? q.SponsorSubscription : ((G = e == null ? void 0 : e.plan) == null ? void 0 : G.plan.oneofKind) === "vip" ? q.VipSubscription : void 0
                    }),
                    p = await b(R, Q => Q.getSubscription, y),
                    Y = Pa((V = p == null ? void 0 : p.item) == null ? void 0 : V.pendingPlan);
                if (p != null && p.item && p.item.active && !Y) F(p.item, u ? ? void 0);
                else throw new Error("activation failed")
            }, {
                delayFirstAttempt: !1,
                startingDelay: 1e3 * 5,
                numOfAttempts: 5
            })
        }, [b, F, u]),
        A = i.useCallback(async e => {
            var Y, U, G, V, Q, ue, me;
            if (h(!0), ((Y = e == null ? void 0 : e.id) == null ? void 0 : Y.value) === "PAYPAL_EMPTY") {
                W(!0);
                return
            }
            if (((U = e == null ? void 0 : e.id) == null ? void 0 : U.value) === "CARD_EMPTY") {
                _(!0);
                return
            }
            let d = v;
            d || (d = await b(R, k => k.getSubscriptionCost, Z));
            const y = {
                    confirmPrice: (d == null ? void 0 : d.total) ? ? n.price ? ? ea(0),
                    paymentGateway: (e == null ? void 0 : e.gateway) ? ? (l == null ? void 0 : l.paymentGateway),
                    paymentMethod: {
                        oneofKind: "paymentMethodId",
                        paymentMethodId: e == null ? void 0 : e.id
                    },
                    platform: aa.WebSubscription,
                    plan: T.is(n) ? {
                        oneofKind: "vipPlanId",
                        vipPlanId: n.id
                    } : ae.is(n) ? {
                        oneofKind: "sponsorPlanId",
                        sponsorPlanId: n.id
                    } : void 0
                },
                p = l != null && l.active ? ta.create({ ...y,
                    id: l == null ? void 0 : l.id
                }) : xe.create(y);
            try {
                const k = () => xe.is(p) ? b(R, f => f.createSubscription, p) : b(R, f => f.updateSubscription, p),
                    {
                        result: Ye,
                        confirmToken: $,
                        ...m
                    } = await k();
                if ((e == null ? void 0 : e.gateway) === he.Stripe && ($ != null && $.value)) {
                    const ee = await (await wa()).confirmCardPayment($.value, {
                        payment_method: (G = e == null ? void 0 : e.id) == null ? void 0 : G.value
                    });
                    ee.error ? D(ee.error.message) : ((V = ee.paymentIntent) == null ? void 0 : V.status) === "succeeded" && (E(() => {
                        j(m.item || null), X(!0), h(!1)
                    }), m.item && M(m.item))
                } else if (Ye && (E(() => {
                        m.item && (j(m.item), m.isPending && (X(!0), M(m.item)))
                    }), !m.isPending && m.item && F(m.item, e), Sa.includes(S))) {
                    const f = ((ue = (Q = m.item) == null ? void 0 : Q.plan) == null ? void 0 : ue.plan) || null;
                    (f == null ? void 0 : f.oneofKind) === "vip" && f.vip && sa("Buy VIP Subscription", {
                        "Action Type": S.toUpperCase(),
                        Price: H(p.confirmPrice).toFixed(2),
                        "VIP ID": f.vip.planId,
                        "VIP Interval": f.vip.interval,
                        "VIP Type": la[f.vip.type],
                        "VIP Product ID": null,
                        "Payment Method": ia[(e == null ? void 0 : e.type) || -1] || null
                    })
                }
            } catch (k) {
                k instanceof na && D((me = k == null ? void 0 : k.response) == null ? void 0 : me.description)
            }
        }, [n, v, l == null ? void 0 : l.paymentGateway, l == null ? void 0 : l.active, l == null ? void 0 : l.id, b, Z, D, S, F, M]),
        Te = i.useCallback(async () => {
            if (!l) return;
            h(!0);
            const e = ra.create({
                id: l.id,
                type: l.type,
                reason: ca.create({
                    value: "User requested"
                })
            });
            try {
                switch (await b(R, d => d.cancelSubscription, e), l.type) {
                    case q.SponsorSubscription:
                        x.invalidateQueries(["subscriptions", z.Sponsor]);
                        break;
                    case q.VipSubscription:
                        x.invalidateQueries(["subscriptions", z.Vip]), K();
                        break
                }
            } finally {
                E(() => {
                    h(!1), o()
                })
            }
        }, [b, o, x, K, l]),
        O = i.useMemo(() => {
            switch (S) {
                case "subscribe":
                    return "SUBSCRIBE";
                case "upgrade":
                    return "UPGRADE";
                case "downgrade":
                    return "DOWNGRADE";
                case "reactivate":
                    return "REACTIVATE";
                case "unsubscribe":
                    return "UNSUBSCRIBE";
                default:
                    return "SUBSCRIBE"
            }
        }, [S]),
        Ue = i.useMemo(() => O === "SUBSCRIBE" ? "Yes" : O === "UNSUBSCRIBE" ? "Update" : O, [O]),
        Ge = i.useCallback(e => {
            if (!ve.is(e)) {
                h(!1), W(!1);
                return
            }
            W(!1), A(e)
        }, [A]),
        Ve = i.useCallback(e => {
            E(() => {
                h(!1), W(!1), D(e)
            })
        }, [D]),
        Ke = i.useCallback(async e => {
            if (!w || !e) {
                h(!1), _(!1);
                return
            }
            x.setQueryData(["payment-methods", B == null ? void 0 : B.id], d => oa(d, y => {
                y && ve.is(e) && y.items.push(e)
            })), _(!1), A(e)
        }, [A, w, x, B == null ? void 0 : B.id]),
        je = i.useCallback(() => {
            h(!1), _(!1)
        }, []),
        We = i.useCallback(e => {
            Be(e)
        }, []),
        _e = i.useCallback(() => {
            u && A(u)
        }, [A, u]),
        Fe = i.useCallback(() => oe(!0), []),
        Oe = i.useCallback(() => oe(!1), []);
    return i.useEffect(() => {
        j(C || null)
    }, [C]), i.useEffect(() => {
        g == null || g(w)
    }, [w, g]), r(Ne, {
        children: [r(re, {
            fullWidth: !0,
            open: t,
            onClose: s,
            PaperProps: {
                className: "dark:!bg-[#202020]",
                style: {
                    maxWidth: "480px"
                }
            },
            children: [r(te, {
                className: "flex items-center justify-between pt-[16px] pb-[10px] pl-[20px] pr-[16px] sm:py-[20px]",
                children: [a("span", {
                    className: "text-[16px] font-bold sm:text-[21px]",
                    children: "Confirm"
                }), a(se, {
                    onClick: s,
                    className: "cursor-pointer text-[#777]"
                })]
            }), a(le, {
                className: da("p-[20px]", {
                    "pointer-events-none": w
                }),
                children: r("div", {
                    className: "mb-[10px] flex max-w-[100%] flex-col space-y-[16px]",
                    children: [r("div", {
                        children: [r("p", {
                            className: "text-[14px] leading-[1.5] text-[#666] dark:text-[#BDBDBD]",
                            children: ["You have selected the plan ", a("span", {
                                className: "font-bold",
                                children: n.name
                            }), "."]
                        }), a("p", {
                            className: "text-[14px] leading-[1.5] text-[#666] dark:text-[#BDBDBD]",
                            children: Ia(C, n)
                        })]
                    }), r("div", {
                        className: "flex items-center",
                        children: [a(ua, {
                            variant: "circle",
                            onChange: () => Re(e => !e),
                            checked: ce
                        }), r("span", {
                            className: "ml-[8px] text-[14px] text-[#666] dark:text-[#BDBDBD]",
                            children: ["I acknowledge that I have read and accept the", " ", a("span", {
                                className: "cursor-pointer underline",
                                onClick: Fe,
                                children: "refund policy"
                            })]
                        })]
                    }), a(ye, {}), v || !u ? r("div", {
                        children: [ae.is(n) && S !== "upgrade" && a("div", {
                            className: "text-[12px] leading-tight text-[#888888]",
                            children: (pe = n.novelInfo) == null ? void 0 : pe.name
                        }), r("div", {
                            className: "flex flex-col space-y-[16px] leading-tight",
                            children: [(fe = v == null ? void 0 : v.lineItems) == null ? void 0 : fe.map((e, d) => {
                                var y;
                                return r("div", {
                                    className: "flex flex-1 items-center justify-between space-x-[20px]",
                                    children: [a("p", {
                                        className: "text-[14px]",
                                        children: (y = e.description) == null ? void 0 : y.value
                                    }), a("p", {
                                        className: "whitespace-nowrap text-[14px]",
                                        children: J(e.amount)
                                    })]
                                }, d)
                            }), r("div", {
                                className: "flex flex-1 items-center justify-between space-x-[20px]",
                                children: [a("p", {
                                    className: "text-[14px] font-semibold",
                                    children: "Total"
                                }), a("p", {
                                    className: "whitespace-nowrap text-[18px] font-semibold",
                                    children: J((v == null ? void 0 : v.total) ? ? n.price)
                                })]
                            })]
                        })]
                    }) : a("div", {
                        className: "flex justify-center",
                        children: a(be, {
                            className: "text-blue"
                        })
                    }), a(ye, {}), a("div", {
                        children: a(ma, {
                            mode: "subscription",
                            onChange: We,
                            validPaymentGateways: S === "unsubscribe" ? ge.filter(e => e !== he.Braintree) : ge
                        })
                    })]
                })
            }), r(ne, {
                className: "!space-x-[10px] px-[20px] pb-[20px] pt-0",
                children: [a(ie, {
                    classes: { ...N,
                        root: L(N.root, "!text-[13px] font-semibold")
                    },
                    className: "min-w-[94px]",
                    variant: "outlined",
                    color: "secondary",
                    onClick: s,
                    children: "Cancel"
                }), a(we, {
                    classes: { ...N,
                        root: L(N.root, "!text-[13px] font-semibold")
                    },
                    className: "min-w-[94px]",
                    onClick: _e,
                    spinner: w,
                    disabled: !u || w || !ce || !v,
                    children: Ue
                })]
            })]
        }), r(re, {
            open: c,
            onClose: o,
            PaperProps: {
                className: "dark:!bg-[#202020]",
                style: {
                    maxWidth: "480px"
                }
            },
            children: [r(te, {
                className: "flex items-center justify-between pt-[16px] pb-[10px] pl-[20px] pr-[16px] sm:py-[20px]",
                children: [a("span", {
                    className: "text-[16px] font-bold sm:text-[21px]",
                    children: "Confirm"
                }), a(se, {
                    onClick: o,
                    className: "cursor-pointer text-[#777]"
                })]
            }), a(le, {
                children: r("div", {
                    className: "text-[14px] leading-[1.5] text-[#666] dark:text-[#BDBDBD]",
                    children: [a("p", {
                        children: "Are you sure you want to unsubscribe?"
                    }), a("p", {
                        children: "Your subscription will be cancelled at the end of the current billing cycle."
                    })]
                })
            }), r(ne, {
                className: "!space-x-[10px] px-[20px] pb-[20px] pt-0",
                children: [a(ie, {
                    classes: { ...N,
                        root: L(N.root, "!text-[13px] font-semibold")
                    },
                    className: "min-w-[94px]",
                    variant: "outlined",
                    color: "secondary",
                    onClick: o,
                    children: "Cancel"
                }), a(we, {
                    classes: { ...N,
                        root: L(N.root, "!text-[13px] font-semibold")
                    },
                    className: "min-w-[119px]",
                    onClick: Te,
                    spinner: w,
                    disabled: w,
                    children: "Unsubscribe"
                })]
            })]
        }), a(ga, {
            open: qe,
            onClose: Oe
        }), a(fa, {
            enabled: De,
            mode: "vault",
            onSelect: Ge,
            onError: Ve
        }), a(xa, {
            open: Ae,
            onClose: je,
            onCompleted: Ke
        }), Ee && a(Na, {}), a(va, {
            open: Ie,
            error: Ce,
            onDismiss: () => D(null)
        })]
    })
}

function Ca(t, s) {
    var C, P, I;
    const c = ke(t);
    if (!(t != null && t.active)) return "subscribe";
    const o = ((C = t == null ? void 0 : t.pendingPlan) == null ? void 0 : C.plan.oneofKind) === "sponsor" ? t.pendingPlan.plan.sponsor : ((P = t.pendingPlan) == null ? void 0 : P.plan.oneofKind) === "vip" ? t.pendingPlan.plan.vip : null;
    if (o && (o == null ? void 0 : o.id) === s.id) return "unsubscribe";
    if (!c) return "subscribe";
    const n = H(c.price);
    return c.id === s.id ? t.subscriptionEndedAt ? "reactivate" : !o || n <= H(o == null ? void 0 : o.price) ? "unsubscribe" : "reactivate" : ((I = t.plan) == null ? void 0 : I.plan.oneofKind) === "vip" && T.is(c) && T.is(s) && c.type != s.type ? s.type > c.type ? "upgrade" : "downgrade" : H(s.price) > n ? "upgrade" : "downgrade"
}
const ke = t => {
        var s, c;
        return t != null && t.active ? ((s = t == null ? void 0 : t.plan) == null ? void 0 : s.plan.oneofKind) === "vip" ? t.plan.plan.vip : ((c = t == null ? void 0 : t.plan) == null ? void 0 : c.plan.oneofKind) === "sponsor" ? t.plan.plan.sponsor : null : null
    },
    Pa = t => (t == null ? void 0 : t.plan.oneofKind) === "vip" ? t.plan.vip : (t == null ? void 0 : t.plan.oneofKind) === "sponsor" ? t.plan.sponsor : null,
    Ia = (t, s) => {
        const c = ke(t);
        return t != null && t.active && s.id === (c == null ? void 0 : c.id) ? `Charges for switching to a different plan will be prorated accordingly.
${T.is(s)?"":" If you have any site credits, they will be applied to your order."}` : t != null && t.active ? "Switching to a different plan will be prorated accordingly." : T.is(s) ? `You will be charged ${J(s.price)} USD every ${s.interval!==12?`${s.interval} month(s)`:"year"} until cancellation.` : `You will be charged ${J(s.price)} USD monthly until cancellation.`
    },
    Sa = ["subscribe", "upgrade", "reactivate"],
    Ua = ya(ka, {
        showLoading: !1
    });
export {
    Ua as S
};
//# sourceMappingURL=SubscribeDialog.DvhIwTo5.min.js.map