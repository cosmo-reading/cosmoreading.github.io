import {
    r as d,
    a$ as M,
    aY as N,
    aZ as g,
    c4 as L,
    aM as r,
    a_ as T,
    aT as k,
    ba as F,
    eF as H,
    bA as O,
    aU as l,
    b4 as v,
    aX as G,
    cN as X
} from "./app.BSN4W8HM.min.js";
const I = d.createContext({});

function Y(o) {
    return N("MuiAccordion", o)
}
const Z = M("MuiAccordion", ["root", "rounded", "expanded", "disabled", "gutters", "region"]),
    R = Z,
    z = ["children", "className", "defaultExpanded", "disabled", "disableGutters", "expanded", "onChange", "square", "slots", "slotProps", "TransitionComponent", "TransitionProps"],
    J = o => {
        const {
            classes: s,
            square: t,
            expanded: e,
            disabled: a,
            disableGutters: i
        } = o;
        return G({
            root: ["root", !t && "rounded", e && "expanded", a && "disabled", !i && "gutters"],
            region: ["region"]
        }, Y, s)
    },
    K = g(L, {
        name: "MuiAccordion",
        slot: "Root",
        overridesResolver: (o, s) => {
            const {
                ownerState: t
            } = o;
            return [{
                [`& .${R.region}`]: s.region
            }, s.root, !t.square && s.rounded, !t.disableGutters && s.gutters]
        }
    })(({
        theme: o
    }) => {
        const s = {
            duration: o.transitions.duration.shortest
        };
        return {
            position: "relative",
            transition: o.transitions.create(["margin"], s),
            overflowAnchor: "none",
            "&::before": {
                position: "absolute",
                left: 0,
                top: -1,
                right: 0,
                height: 1,
                content: '""',
                opacity: 1,
                backgroundColor: (o.vars || o).palette.divider,
                transition: o.transitions.create(["opacity", "background-color"], s)
            },
            "&:first-of-type": {
                "&::before": {
                    display: "none"
                }
            },
            [`&.${R.expanded}`]: {
                "&::before": {
                    opacity: 0
                },
                "&:first-of-type": {
                    marginTop: 0
                },
                "&:last-of-type": {
                    marginBottom: 0
                },
                "& + &": {
                    "&::before": {
                        display: "none"
                    }
                }
            },
            [`&.${R.disabled}`]: {
                backgroundColor: (o.vars || o).palette.action.disabledBackground
            }
        }
    }, ({
        theme: o,
        ownerState: s
    }) => r({}, !s.square && {
        borderRadius: 0,
        "&:first-of-type": {
            borderTopLeftRadius: (o.vars || o).shape.borderRadius,
            borderTopRightRadius: (o.vars || o).shape.borderRadius
        },
        "&:last-of-type": {
            borderBottomLeftRadius: (o.vars || o).shape.borderRadius,
            borderBottomRightRadius: (o.vars || o).shape.borderRadius,
            "@supports (-ms-ime-align: auto)": {
                borderBottomLeftRadius: 0,
                borderBottomRightRadius: 0
            }
        }
    }, !s.disableGutters && {
        [`&.${R.expanded}`]: {
            margin: "16px 0"
        }
    })),
    Q = d.forwardRef(function(s, t) {
        const e = T({
                props: s,
                name: "MuiAccordion"
            }),
            {
                children: a,
                className: i,
                defaultExpanded: c = !1,
                disabled: p = !1,
                disableGutters: u = !1,
                expanded: S,
                onChange: m,
                square: y = !1,
                slots: C = {},
                slotProps: A = {},
                TransitionComponent: h,
                TransitionProps: b
            } = e,
            x = k(e, z),
            [n, w] = F({
                controlled: S,
                default: c,
                name: "Accordion",
                state: "expanded"
            }),
            j = d.useCallback(q => {
                w(!n), m && m(q, !n)
            }, [n, m, w]),
            [$, ...U] = d.Children.toArray(a),
            V = d.useMemo(() => ({
                expanded: n,
                disabled: p,
                disableGutters: u,
                toggle: j
            }), [n, p, u, j]),
            P = r({}, e, {
                square: y,
                disabled: p,
                disableGutters: u,
                expanded: n
            }),
            D = J(P),
            B = r({
                transition: h
            }, C),
            W = r({
                transition: b
            }, A),
            [E, _] = H("transition", {
                elementType: O,
                externalForwardedProps: {
                    slots: B,
                    slotProps: W
                },
                ownerState: P
            });
        return l.jsxs(K, r({
            className: v(D.root, i),
            ref: t,
            ownerState: P,
            square: y
        }, x, {
            children: [l.jsx(I.Provider, {
                value: V,
                children: $
            }), l.jsx(E, r({ in: n,
                timeout: "auto"
            }, _, {
                children: l.jsx("div", {
                    "aria-labelledby": $.props.id,
                    id: $.props["aria-controls"],
                    role: "region",
                    className: D.region,
                    children: U
                })
            }))]
        }))
    }),
    xo = Q;

function oo(o) {
    return N("MuiAccordionDetails", o)
}
M("MuiAccordionDetails", ["root"]);
const so = ["className"],
    to = o => {
        const {
            classes: s
        } = o;
        return G({
            root: ["root"]
        }, oo, s)
    },
    eo = g("div", {
        name: "MuiAccordionDetails",
        slot: "Root",
        overridesResolver: (o, s) => s.root
    })(({
        theme: o
    }) => ({
        padding: o.spacing(1, 2, 2)
    })),
    ro = d.forwardRef(function(s, t) {
        const e = T({
                props: s,
                name: "MuiAccordionDetails"
            }),
            {
                className: a
            } = e,
            i = k(e, so),
            c = e,
            p = to(c);
        return l.jsx(eo, r({
            className: v(p.root, a),
            ref: t,
            ownerState: c
        }, i))
    }),
    fo = ro;

function ao(o) {
    return N("MuiAccordionSummary", o)
}
const no = M("MuiAccordionSummary", ["root", "expanded", "focusVisible", "disabled", "gutters", "contentGutters", "content", "expandIconWrapper"]),
    f = no,
    io = ["children", "className", "expandIcon", "focusVisibleClassName", "onClick"],
    co = o => {
        const {
            classes: s,
            expanded: t,
            disabled: e,
            disableGutters: a
        } = o;
        return G({
            root: ["root", t && "expanded", e && "disabled", !a && "gutters"],
            focusVisible: ["focusVisible"],
            content: ["content", t && "expanded", !a && "contentGutters"],
            expandIconWrapper: ["expandIconWrapper", t && "expanded"]
        }, ao, s)
    },
    lo = g(X, {
        name: "MuiAccordionSummary",
        slot: "Root",
        overridesResolver: (o, s) => s.root
    })(({
        theme: o,
        ownerState: s
    }) => {
        const t = {
            duration: o.transitions.duration.shortest
        };
        return r({
            display: "flex",
            minHeight: 48,
            padding: o.spacing(0, 2),
            transition: o.transitions.create(["min-height", "background-color"], t),
            [`&.${f.focusVisible}`]: {
                backgroundColor: (o.vars || o).palette.action.focus
            },
            [`&.${f.disabled}`]: {
                opacity: (o.vars || o).palette.action.disabledOpacity
            },
            [`&:hover:not(.${f.disabled})`]: {
                cursor: "pointer"
            }
        }, !s.disableGutters && {
            [`&.${f.expanded}`]: {
                minHeight: 64
            }
        })
    }),
    po = g("div", {
        name: "MuiAccordionSummary",
        slot: "Content",
        overridesResolver: (o, s) => s.content
    })(({
        theme: o,
        ownerState: s
    }) => r({
        display: "flex",
        flexGrow: 1,
        margin: "12px 0"
    }, !s.disableGutters && {
        transition: o.transitions.create(["margin"], {
            duration: o.transitions.duration.shortest
        }),
        [`&.${f.expanded}`]: {
            margin: "20px 0"
        }
    })),
    uo = g("div", {
        name: "MuiAccordionSummary",
        slot: "ExpandIconWrapper",
        overridesResolver: (o, s) => s.expandIconWrapper
    })(({
        theme: o
    }) => ({
        display: "flex",
        color: (o.vars || o).palette.action.active,
        transform: "rotate(0deg)",
        transition: o.transitions.create("transform", {
            duration: o.transitions.duration.shortest
        }),
        [`&.${f.expanded}`]: {
            transform: "rotate(180deg)"
        }
    })),
    mo = d.forwardRef(function(s, t) {
        const e = T({
                props: s,
                name: "MuiAccordionSummary"
            }),
            {
                children: a,
                className: i,
                expandIcon: c,
                focusVisibleClassName: p,
                onClick: u
            } = e,
            S = k(e, io),
            {
                disabled: m = !1,
                disableGutters: y,
                expanded: C,
                toggle: A
            } = d.useContext(I),
            h = n => {
                A && A(n), u && u(n)
            },
            b = r({}, e, {
                expanded: C,
                disabled: m,
                disableGutters: y
            }),
            x = co(b);
        return l.jsxs(lo, r({
            focusRipple: !1,
            disableRipple: !0,
            disabled: m,
            component: "div",
            "aria-expanded": C,
            className: v(x.root, i),
            focusVisibleClassName: v(x.focusVisible, p),
            onClick: h,
            ref: t,
            ownerState: b
        }, S, {
            children: [l.jsx(po, {
                className: x.content,
                ownerState: b,
                children: a
            }), c && l.jsx(uo, {
                className: x.expandIconWrapper,
                ownerState: b,
                children: c
            })]
        }))
    }),
    go = mo;
export {
    go as A, fo as a, xo as b
};
//# sourceMappingURL=AccordionSummary.CqtbB2FW.min.js.map