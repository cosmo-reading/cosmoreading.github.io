import {
    r as s,
    P as E,
    d2 as w,
    cY as A,
    j as l,
    dN as S
} from "./app.BSN4W8HM.min.js";
var u;

function o() {
    return o = Object.assign ? Object.assign.bind() : function(r) {
        for (var t = 1; t < arguments.length; t++) {
            var e = arguments[t];
            for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n])
        }
        return r
    }, o.apply(this, arguments)
}
var j = function(t) {
    return s.createElement("svg", o({
        width: 20,
        height: 20,
        viewBox: "0 0 20 20",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
    }, t), u || (u = s.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M14.327 18H2a2 2 0 0 1-2-2V7.94a2 2 0 0 1 1.875-1.997l4.175-.26 3.641-3.768A3 3 0 0 1 11.848 1h.613a2 2 0 0 1 1.828 2.812l-.676 1.522 1.288-.13a4.343 4.343 0 0 1 4.577 5.618l-1.375 4.402A3.956 3.956 0 0 1 14.327 18ZM7 7.578V16h7.327c.855 0 1.611-.556 1.867-1.372l1.375-4.403a2.343 2.343 0 0 0-2.469-3.03l-3 .3a1 1 0 0 1-1.014-1.401L12.461 3h-.613a1 1 0 0 0-.719.305L7 7.578Zm-2 .174-3 .187V16h3V7.752Z",
        fill: "currentColor"
    })))
};

function y({
    src: r,
    height: t,
    width: e,
    imageRenderSize: n,
    fallbackImage: a,
    imgProps: d,
    ...g
}) {
    const [h, i] = E({
        triggerOnce: !0
    }), [f, v] = s.useState(a), c = w({
        src: r ? ? "",
        layout: "fill",
        quality: 75,
        width: n * x,
        unoptimized: !1
    });
    A(() => {
        i && v(c.src)
    }, [i, c]);
    const p = s.useCallback(m => {
        a && (m.currentTarget.src = a)
    }, [a]);
    return l("div", {
        ref: h,
        children: l(S, { ...g,
            src: f,
            onError: p,
            imgProps: {
                loading: "lazy",
                width: e,
                height: t,
                ...d || {}
            }
        })
    })
}
const x = 3;
export {
    y as L, j as S
};
//# sourceMappingURL=lazy-avatar.C01FGxiO.min.js.map