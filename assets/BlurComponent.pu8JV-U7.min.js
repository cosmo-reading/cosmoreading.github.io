import {
    r as d,
    dO as G,
    j as I
} from "./app.BSN4W8HM.min.js";
var j;

function C() {
    return C = Object.assign ? Object.assign.bind() : function(t) {
        for (var e = 1; e < arguments.length; e++) {
            var a = arguments[e];
            for (var r in a) Object.prototype.hasOwnProperty.call(a, r) && (t[r] = a[r])
        }
        return t
    }, C.apply(this, arguments)
}
var J = function(e) {
        return d.createElement("svg", C({
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 800 800",
            style: {
                enableBackground: "new 0 0 800 800"
            },
            xmlSpace: "preserve"
        }, e), j || (j = d.createElement("path", {
            d: "M371.55 172.96c-.64-1.09-1.22-2.06-1.8-3.04-16.28-27.52-32.61-55.03-46.38-83.91-3.73-7.81-6.78-16.1-8.9-24.48-2.13-8.38.63-16.29 6.4-22.77 4.15-4.67 9.54-5.65 15.47-3.82 8.82 2.73 15.94 11.67 15.46 21.46-.37 7.66 2.46 13.1 7.19 18.69 22.4 26.44 40.32 55.78 55.26 86.99.45.94.94 1.86 1.32 2.59 6.64-1.49 13-3.35 19.49-4.3 14.37-2.09 28.82-3.65 43.22-5.58 7.55-1.01 12.52 2.47 16 8.68 4.78 8.53 5.56 17.54 2.54 26.8-.66 2.02-1.9 4.03-3.38 5.57-3.47 3.61-8.95 3.61-12.2-.18-1.95-2.27-3.3-5.16-4.47-7.96-.67-1.58-1.43-2.31-3.02-2.25-4.6.18-9.03.21-13.59 2.15-5.51 2.35-11.67 3.18-17.57 4.56-4.36 1.02-8.76 1.87-13.58 2.89.37 1.44.56 2.81 1.07 4.05 12.49 30.75 25.01 61.48 37.54 92.21.1.24.26.45.45.78 3.86-.57 7.75-1.28 11.66-1.69 12.57-1.33 24.43.7 35.04 7.98 1.73 1.19 3.42 2.54 4.79 4.11 2.87 3.28 2.28 7.06-1.79 8.56-3.98 1.48-8.3 2.31-12.54 2.74-7.96.81-15.97 1.1-23.96 1.66-1.11.08-2.2.43-3.53.7 3.28 8.05 6.45 15.87 9.66 23.67 22.93 55.86 45.51 111.87 68.9 167.54 24.84 59.08 53.25 116.42 86.57 171.25 17.58 28.93 37.55 56.08 59.86 81.52 1.49 1.7 2.88 3.49 4.82 5.86-2.02-.48-3.39-.53-4.5-1.1-15.67-8.08-30.86-16.92-44.73-27.9-22.84-18.09-43.24-38.63-61.73-61.1-31.9-38.78-57.74-81.45-80.49-126.07-21.51-42.18-39.49-85.88-55.59-130.37-2.37-6.53-4.64-13.1-6.96-19.65-.32-.9-.69-1.77-1.22-3.11-11.68 29.81-30.64 53.89-54.13 75.1 3.66 1.61 6.97 2.97 10.2 4.5 15.58 7.4 31.2 14.75 46.67 22.37 3.33 1.64 6.46 4.04 9.1 6.67 5.2 5.18 5.3 11.93.68 17.66-4.02 4.98-9.29 8.42-14.95 11.12-12.08 5.76-24.26 11.29-36.44 16.84-36.64 16.69-72.87 34.19-107.38 55.04-6.79 4.1-13.47 8.36-20.21 12.54-12.23 7.58-25.38 12.44-39.77 13.93-17.05 1.77-31.14-3.91-42.73-16.31-12.67-13.55-20.01-29.34-18.31-48.13.87-9.59 3.31-19.07 5.42-28.51 8.77-39.33 26.07-75.04 46.91-109.19 5.18-8.5 10.6-16.85 15.92-25.27.51-.81 1.01-1.62 1.71-2.73-.71.06-1.13-.01-1.46.13-23.45 10.08-47.29 19.35-69.72 31.64-9.95 5.45-19.5 11.66-29.08 17.75-11.54 7.34-23.18 14.43-36.17 19-11.53 4.05-22.56 3.92-33.09-3.12-7.25-4.84-7.43-9.42.41-13.3 7-3.46 14.42-6.06 21.72-8.9 28.06-10.94 51.97-27.82 73.04-49.27 44.1-44.92 88.49-89.57 132.94-134.14 22.62-22.68 46.58-43.89 72.15-63.23.42-.31.79-.68 1.16-1.01-2.14-4.51-2.13-4.45-5.89-3.76-20.95 3.84-41.1 10.47-60.98 17.92-17.07 6.39-33.92 13.36-51.08 19.48-7.4 2.64-15.25 4.63-23.04 5.41-12.63 1.26-24.03-3.08-33.79-11.07-4.82-3.95-9.15-8.53-13.43-13.07-1.24-1.32-1.57-3.51-2.32-5.29 1.9-.36 3.88-1.27 5.67-.98 6.25 1.01 12.42 2.47 18.64 3.7 13.23 2.61 26.19.96 38.87-2.97 19.75-6.13 39.35-12.75 59.12-18.82 16.82-5.16 33.8-9.84 50.7-14.73.65-.21 1.3-.45 2.16-.73zm60.09 156.44c-1.24.44-2.25.72-3.2 1.13-13.69 5.91-46.76 18.4-48.39 19.06-7.09 2.9-14.06 6.07-21.13 9.01-17.96 7.5-35.79 15.28-52.73 24.92-19.03 10.83-35.22 24.73-45.91 44.14-7.47 13.57-14.73 27.28-21.44 41.23-12.38 25.76-20.36 53.03-26.49 80.87-1.76 7.98-3.8 15.94-2.7 24.29 2.2 16.67 15.6 34.33 38.99 32.56 8.46-.64 16.02-3.87 23.29-7.97 33.36-18.83 66.69-37.73 101.55-53.7 14.4-6.6 29.03-12.71 43.36-19.47 5.52-2.61 10.79-6 15.64-9.72 5.1-3.91 5.13-9.19.42-13.6-2.6-2.43-5.7-4.47-8.86-6.12-10.46-5.46-21.07-10.62-31.56-16.01-1.78-.92-2.86-.69-4.36.56-17.22 14.29-35.87 26.44-55.78 36.63-6.88 3.52-14.07 6.11-21.9 6.33-8.2.24-16.07-1.29-21.86-7.46-9.46-10.1-14.86-27.29-2.46-41.98 5.86-6.93 13.27-11.75 21-16.24 13.05-7.58 26.82-9.53 41.21-4.96 9.63 3.05 19.07 6.74 28.56 10.22 1.57.58 2.7.48 4.1-.53 11.05-7.94 21.5-16.58 30.95-26.39 14.95-15.52 27.24-32.78 34.27-53.37.5-1.45.48-3.3.07-4.8-1.3-4.84-2.91-9.6-4.36-14.4-3.39-11.27-6.77-22.56-10.28-34.23zm-36.73-117.62c-3.65 2.59-7.11 4.71-10.17 7.29-19.38 16.39-38.89 32.63-57.9 49.44-12.6 11.15-24.84 22.78-36.54 34.87-32.06 33.13-63.75 66.62-95.58 99.97-.37.39-.64.86-1.29 1.74 77.33-33.51 153.02-69.23 231.74-98.12-9.73-32.09-18.27-63.96-30.26-95.19zm-26.59 259.74-.18-.75c-11.27-3.92-22.6-7.53-34.57-8.89-8.13-.93-15.38.98-21.97 5.61-4.17 2.93-8.46 5.81-12.15 9.28-2.74 2.58-5.58 5.78-6.69 9.24-3.45 10.76.56 15.71 10.93 15.73 8.44.02 16.01-3.03 23.28-6.91 8.38-4.47 16.7-9.06 24.98-13.71 5.52-3.1 10.92-6.4 16.37-9.6zM543.28 259.33c-1.37-.21-2.73-.73-3.98-1.36-3.13-1.58-3.74-4.4-.93-6.47 2.54-1.87 5.64-3.24 8.69-4.12 7.6-2.2 15.39-3.76 22.97-6.02 6.56-1.96 13.06-4.25 19.33-6.97 3.21-1.4 6.16-3.78 8.7-6.26 3.09-3.01 3.39-6.28.93-9.82-2.39-3.44-5.25-6.62-8.23-9.59-15.2-15.12-33.19-25.68-53.5-32.43-4.75-1.58-9.39-3.53-13.93-5.63-1.48-.69-2.5-2.39-3.73-3.62 1.65-.6 3.35-1.8 4.95-1.69 6.48.46 12.97 1.1 19.4 2.08 15.73 2.39 30.98 6.53 45.48 13.22 14.56 6.72 26.94 16.35 37.19 28.6 2.48 2.97 4.37 6.61 5.81 10.23 2.38 6 1.25 11.92-3.26 16.41-3.75 3.73-8.13 7.03-12.72 9.68-11.83 6.84-25.02 9.78-38.31 12.14-7.63 1.36-30.96 2.21-34.86 1.62z"
        })))
    },
    P = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "#", "$", "%", "*", "+", ",", "-", ".", ":", ";", "=", "?", "@", "[", "]", "^", "_", "{", "|", "}", "~"],
    f = t => {
        let e = 0;
        for (let a = 0; a < t.length; a++) {
            let r = t[a],
                s = P.indexOf(r);
            e = e * 83 + s
        }
        return e
    },
    M = t => {
        let e = t / 255;
        return e <= .04045 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)
    },
    b = t => {
        let e = Math.max(0, Math.min(1, t));
        return e <= .0031308 ? Math.trunc(e * 12.92 * 255 + .5) : Math.trunc((1.055 * Math.pow(e, .4166666666666667) - .055) * 255 + .5)
    },
    R = t => t < 0 ? -1 : 1,
    x = (t, e) => R(t) * Math.pow(Math.abs(t), e),
    z = class extends Error {
        constructor(t) {
            super(t), this.name = "ValidationError", this.message = t
        }
    },
    A = t => {
        if (!t || t.length < 6) throw new z("The blurhash string must be at least 6 characters");
        let e = f(t[0]),
            a = Math.floor(e / 9) + 1,
            r = e % 9 + 1;
        if (t.length !== 4 + 2 * r * a) throw new z(`blurhash length mismatch: length is ${t.length} but it should be ${4+2*r*a}`)
    },
    N = t => {
        let e = t >> 16,
            a = t >> 8 & 255,
            r = t & 255;
        return [M(e), M(a), M(r)]
    },
    U = (t, e) => {
        let a = Math.floor(t / 361),
            r = Math.floor(t / 19) % 19,
            s = t % 19;
        return [x((a - 9) / 9, 2) * e, x((r - 9) / 9, 2) * e, x((s - 9) / 9, 2) * e]
    },
    V = (t, e, a, r) => {
        A(t), r = r | 1;
        let s = f(t[0]),
            c = Math.floor(s / 9) + 1,
            u = s % 9 + 1,
            i = (f(t[1]) + 1) / 166,
            g = new Array(u * c);
        for (let n = 0; n < g.length; n++)
            if (n === 0) {
                let o = f(t.substring(2, 6));
                g[n] = N(o)
            } else {
                let o = f(t.substring(4 + n * 2, 6 + n * 2));
                g[n] = U(o, i * r)
            }
        let l = e * 4,
            h = new Uint8ClampedArray(l * a);
        for (let n = 0; n < a; n++)
            for (let o = 0; o < e; o++) {
                let E = 0,
                    y = 0,
                    B = 0;
                for (let m = 0; m < c; m++)
                    for (let p = 0; p < u; p++) {
                        let v = Math.cos(Math.PI * o * p / e) * Math.cos(Math.PI * n * m / a),
                            w = g[p + m * u];
                        E += w[0] * v, y += w[1] * v, B += w[2] * v
                    }
                let D = b(E),
                    _ = b(y),
                    S = b(B);
                h[4 * o + 0 + n * l] = D, h[4 * o + 1 + n * l] = _, h[4 * o + 2 + n * l] = S, h[4 * o + 3 + n * l] = 255
            }
        return h
    },
    q = V;
const O = new Map,
    F = ({
        hash: t,
        options: {
            punch: e,
            width: a,
            height: r
        }
    }) => q(t, a, r, e),
    H = ({
        hash: t,
        options: {
            height: e,
            width: a,
            punch: r
        }
    }) => `${t}_${e}_${a}_${r}`,
    K = t => {
        const e = H(t),
            a = O.get(e);
        if (a) return a;
        const r = F(t);
        return O.set(e, r), r
    },
    L = t => {
        const {
            src: e,
            ...a
        } = t;
        return G(() => K(t), [a])
    };
let $ = null;

function Q({
    entry: t,
    width: e,
    height: a,
    fitsToParent: r
}) {
    const s = d.useRef(null),
        {
            width: c,
            height: u
        } = t.options,
        i = L(t);
    return d.useEffect(() => {
        (() => {
            const l = s.current;
            if (!l || !i) return;
            r && (l.style.width = "100%", l.style.height = "100%"), l.getContext("2d").drawImage(W(i, c, u), 0, 0, e, a)
        })()
    }, [u, c, i, r, a, e]), I("span", {
        className: "absolute top-0 left-0 h-full w-full",
        children: I("canvas", {
            className: "rounded-[6px]",
            ref: s,
            width: e,
            height: a
        })
    })
}

function T() {
    return $ || ($ = document.createElement("canvas"))
}
const W = (t, e, a) => {
    const r = T();
    r.width = e, r.height = a;
    const s = r.getContext("2d"),
        c = s.createImageData(e, a);
    return c.data.set(t), s.putImageData(c, 0, 0), r
};
export {
    Q as B, J as S
};
//# sourceMappingURL=BlurComponent.pu8JV-U7.min.js.map