import {
    a$ as fe,
    aY as he,
    aZ as K,
    en as Wo,
    aM as r,
    b0 as Uo,
    b8 as jo,
    r as p,
    a_ as ge,
    aT as be,
    c6 as Te,
    dm as ve,
    c1 as F,
    ba as Pe,
    bc as we,
    c2 as Bo,
    eo as ye,
    bb as xe,
    b4 as N,
    c9 as Do,
    ep as k,
    aU as g,
    aX as Ce,
    eq as Re
} from "./app.BSN4W8HM.min.js";

function Me(t) {
    return he("MuiTooltip", t)
}
const $e = fe("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]),
    u = $e,
    _e = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];

function Oe(t) {
    return Math.round(t * 1e5) / 1e5
}
const Le = t => {
        const {
            classes: e,
            disableInteractive: s,
            arrow: a,
            touch: x,
            placement: C
        } = t, R = {
            popper: ["popper", !s && "popperInteractive", a && "popperArrow"],
            tooltip: ["tooltip", a && "tooltipArrow", x && "touch", `tooltipPlacement${Uo(C.split("-")[0])}`],
            arrow: ["arrow"]
        };
        return Ce(R, Me, e)
    },
    Ee = K(Wo, {
        name: "MuiTooltip",
        slot: "Popper",
        overridesResolver: (t, e) => {
            const {
                ownerState: s
            } = t;
            return [e.popper, !s.disableInteractive && e.popperInteractive, s.arrow && e.popperArrow, !s.open && e.popperClose]
        }
    })(({
        theme: t,
        ownerState: e,
        open: s
    }) => r({
        zIndex: (t.vars || t).zIndex.tooltip,
        pointerEvents: "none"
    }, !e.disableInteractive && {
        pointerEvents: "auto"
    }, !s && {
        pointerEvents: "none"
    }, e.arrow && {
        [`&[data-popper-placement*="bottom"] .${u.arrow}`]: {
            top: 0,
            marginTop: "-0.71em",
            "&::before": {
                transformOrigin: "0 100%"
            }
        },
        [`&[data-popper-placement*="top"] .${u.arrow}`]: {
            bottom: 0,
            marginBottom: "-0.71em",
            "&::before": {
                transformOrigin: "100% 0"
            }
        },
        [`&[data-popper-placement*="right"] .${u.arrow}`]: r({}, e.isRtl ? {
            right: 0,
            marginRight: "-0.71em"
        } : {
            left: 0,
            marginLeft: "-0.71em"
        }, {
            height: "1em",
            width: "0.71em",
            "&::before": {
                transformOrigin: "100% 100%"
            }
        }),
        [`&[data-popper-placement*="left"] .${u.arrow}`]: r({}, e.isRtl ? {
            left: 0,
            marginLeft: "-0.71em"
        } : {
            right: 0,
            marginRight: "-0.71em"
        }, {
            height: "1em",
            width: "0.71em",
            "&::before": {
                transformOrigin: "0 0"
            }
        })
    })),
    Ie = K("div", {
        name: "MuiTooltip",
        slot: "Tooltip",
        overridesResolver: (t, e) => {
            const {
                ownerState: s
            } = t;
            return [e.tooltip, s.touch && e.touch, s.arrow && e.tooltipArrow, e[`tooltipPlacement${Uo(s.placement.split("-")[0])}`]]
        }
    })(({
        theme: t,
        ownerState: e
    }) => r({
        backgroundColor: t.vars ? t.vars.palette.Tooltip.bg : jo(t.palette.grey[700], .92),
        borderRadius: (t.vars || t).shape.borderRadius,
        color: (t.vars || t).palette.common.white,
        fontFamily: t.typography.fontFamily,
        padding: "4px 8px",
        fontSize: t.typography.pxToRem(11),
        maxWidth: 300,
        margin: 2,
        wordWrap: "break-word",
        fontWeight: t.typography.fontWeightMedium
    }, e.arrow && {
        position: "relative",
        margin: 0
    }, e.touch && {
        padding: "8px 16px",
        fontSize: t.typography.pxToRem(14),
        lineHeight: `${Oe(16/14)}em`,
        fontWeight: t.typography.fontWeightRegular
    }, {
        [`.${u.popper}[data-popper-placement*="left"] &`]: r({
            transformOrigin: "right center"
        }, e.isRtl ? r({
            marginLeft: "14px"
        }, e.touch && {
            marginLeft: "24px"
        }) : r({
            marginRight: "14px"
        }, e.touch && {
            marginRight: "24px"
        })),
        [`.${u.popper}[data-popper-placement*="right"] &`]: r({
            transformOrigin: "left center"
        }, e.isRtl ? r({
            marginRight: "14px"
        }, e.touch && {
            marginRight: "24px"
        }) : r({
            marginLeft: "14px"
        }, e.touch && {
            marginLeft: "24px"
        })),
        [`.${u.popper}[data-popper-placement*="top"] &`]: r({
            transformOrigin: "center bottom",
            marginBottom: "14px"
        }, e.touch && {
            marginBottom: "24px"
        }),
        [`.${u.popper}[data-popper-placement*="bottom"] &`]: r({
            transformOrigin: "center top",
            marginTop: "14px"
        }, e.touch && {
            marginTop: "24px"
        })
    })),
    Fe = K("span", {
        name: "MuiTooltip",
        slot: "Arrow",
        overridesResolver: (t, e) => e.arrow
    })(({
        theme: t
    }) => ({
        overflow: "hidden",
        position: "absolute",
        width: "1em",
        height: "0.71em",
        boxSizing: "border-box",
        color: t.vars ? t.vars.palette.Tooltip.bg : jo(t.palette.grey[700], .9),
        "&::before": {
            content: '""',
            margin: "auto",
            display: "block",
            width: "100%",
            height: "100%",
            backgroundColor: "currentColor",
            transform: "rotate(45deg)"
        }
    }));
let A = !1;
const So = new Re;
let y = {
    x: 0,
    y: 0
};

function B(t, e) {
    return (s, ...a) => {
        e && e(s, ...a), t(s, ...a)
    }
}
const Ne = p.forwardRef(function(e, s) {
        var a, x, C, R, Z, J, Q, oo, eo, to, ro, so, no, po, io, lo, ao, co, uo;
        const D = ge({
                props: e,
                name: "MuiTooltip"
            }),
            {
                arrow: mo = !1,
                children: S,
                components: M = {},
                componentsProps: d = {},
                describeChild: Vo = !1,
                disableFocusListener: zo = !1,
                disableHoverListener: fo = !1,
                disableInteractive: Ho = !1,
                disableTouchListener: Xo = !1,
                enterDelay: ho = 100,
                enterNextDelay: go = 0,
                enterTouchDelay: Yo = 700,
                followCursor: W = !1,
                id: qo,
                leaveDelay: bo = 0,
                leaveTouchDelay: Go = 1500,
                onClose: To,
                onOpen: vo,
                open: Ko,
                placement: Po = "bottom",
                PopperComponent: U,
                PopperProps: m = {},
                slotProps: f = {},
                slots: $ = {},
                title: h,
                TransitionComponent: Zo = Do,
                TransitionProps: Jo
            } = D,
            wo = be(D, _e),
            c = p.isValidElement(S) ? S : g.jsx("span", {
                children: S
            }),
            yo = Te(),
            Qo = ve(),
            [b, xo] = p.useState(),
            [j, oe] = p.useState(null),
            _ = p.useRef(!1),
            V = Ho || W,
            Co = F(),
            z = F(),
            O = F(),
            Ro = F(),
            [ee, Mo] = Pe({
                controlled: Ko,
                default: !1,
                name: "Tooltip",
                state: "open"
            });
        let l = ee;
        const H = we(qo),
            T = p.useRef(),
            L = Bo(() => {
                T.current !== void 0 && (document.body.style.WebkitUserSelect = T.current, T.current = void 0), Ro.clear()
            });
        p.useEffect(() => L, [L]);
        const $o = o => {
                So.clear(), A = !0, Mo(!0), vo && !l && vo(o)
            },
            E = Bo(o => {
                So.start(800 + bo, () => {
                    A = !1
                }), Mo(!1), To && l && To(o), Co.start(yo.transitions.duration.shortest, () => {
                    _.current = !1
                })
            }),
            I = o => {
                _.current && o.type !== "touchstart" || (b && b.removeAttribute("title"), z.clear(), O.clear(), ho || A && go ? z.start(A ? go : ho, () => {
                    $o(o)
                }) : $o(o))
            },
            X = o => {
                z.clear(), O.start(bo, () => {
                    E(o)
                })
            },
            {
                isFocusVisibleRef: _o,
                onBlur: te,
                onFocus: re,
                ref: se
            } = ye(),
            [, Oo] = p.useState(!1),
            Lo = o => {
                te(o), _o.current === !1 && (Oo(!1), X(o))
            },
            Eo = o => {
                b || xo(o.currentTarget), re(o), _o.current === !0 && (Oo(!0), I(o))
            },
            Io = o => {
                _.current = !0;
                const n = c.props;
                n.onTouchStart && n.onTouchStart(o)
            },
            ne = o => {
                Io(o), O.clear(), Co.clear(), L(), T.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", Ro.start(Yo, () => {
                    document.body.style.WebkitUserSelect = T.current, I(o)
                })
            },
            pe = o => {
                c.props.onTouchEnd && c.props.onTouchEnd(o), L(), O.start(Go, () => {
                    E(o)
                })
            };
        p.useEffect(() => {
            if (!l) return;

            function o(n) {
                (n.key === "Escape" || n.key === "Esc") && E(n)
            }
            return document.addEventListener("keydown", o), () => {
                document.removeEventListener("keydown", o)
            }
        }, [E, l]);
        const ie = xe(c.ref, se, xo, s);
        !h && h !== 0 && (l = !1);
        const Y = p.useRef(),
            le = o => {
                const n = c.props;
                n.onMouseMove && n.onMouseMove(o), y = {
                    x: o.clientX,
                    y: o.clientY
                }, Y.current && Y.current.update()
            },
            v = {},
            q = typeof h == "string";
        Vo ? (v.title = !l && q && !fo ? h : null, v["aria-describedby"] = l ? H : null) : (v["aria-label"] = q ? h : null, v["aria-labelledby"] = l && !q ? H : null);
        const i = r({}, v, wo, c.props, {
                className: N(wo.className, c.props.className),
                onTouchStart: Io,
                ref: ie
            }, W ? {
                onMouseMove: le
            } : {}),
            P = {};
        Xo || (i.onTouchStart = ne, i.onTouchEnd = pe), fo || (i.onMouseOver = B(I, i.onMouseOver), i.onMouseLeave = B(X, i.onMouseLeave), V || (P.onMouseOver = I, P.onMouseLeave = X)), zo || (i.onFocus = B(Eo, i.onFocus), i.onBlur = B(Lo, i.onBlur), V || (P.onFocus = Eo, P.onBlur = Lo));
        const ae = p.useMemo(() => {
                var o;
                let n = [{
                    name: "arrow",
                    enabled: !!j,
                    options: {
                        element: j,
                        padding: 4
                    }
                }];
                return (o = m.popperOptions) != null && o.modifiers && (n = n.concat(m.popperOptions.modifiers)), r({}, m.popperOptions, {
                    modifiers: n
                })
            }, [j, m]),
            w = r({}, D, {
                isRtl: Qo,
                arrow: mo,
                disableInteractive: V,
                placement: Po,
                PopperComponentProp: U,
                touch: _.current
            }),
            G = Le(w),
            Fo = (a = (x = $.popper) != null ? x : M.Popper) != null ? a : Ee,
            No = (C = (R = (Z = $.transition) != null ? Z : M.Transition) != null ? R : Zo) != null ? C : Do,
            ko = (J = (Q = $.tooltip) != null ? Q : M.Tooltip) != null ? J : Ie,
            Ao = (oo = (eo = $.arrow) != null ? eo : M.Arrow) != null ? oo : Fe,
            ce = k(Fo, r({}, m, (to = f.popper) != null ? to : d.popper, {
                className: N(G.popper, m == null ? void 0 : m.className, (ro = (so = f.popper) != null ? so : d.popper) == null ? void 0 : ro.className)
            }), w),
            ue = k(No, r({}, Jo, (no = f.transition) != null ? no : d.transition), w),
            de = k(ko, r({}, (po = f.tooltip) != null ? po : d.tooltip, {
                className: N(G.tooltip, (io = (lo = f.tooltip) != null ? lo : d.tooltip) == null ? void 0 : io.className)
            }), w),
            me = k(Ao, r({}, (ao = f.arrow) != null ? ao : d.arrow, {
                className: N(G.arrow, (co = (uo = f.arrow) != null ? uo : d.arrow) == null ? void 0 : co.className)
            }), w);
        return g.jsxs(p.Fragment, {
            children: [p.cloneElement(c, i), g.jsx(Fo, r({
                as: U ? ? Wo,
                placement: Po,
                anchorEl: W ? {
                    getBoundingClientRect: () => ({
                        top: y.y,
                        left: y.x,
                        right: y.x,
                        bottom: y.y,
                        width: 0,
                        height: 0
                    })
                } : b,
                popperRef: Y,
                open: b ? l : !1,
                id: H,
                transition: !0
            }, P, ce, {
                popperOptions: ae,
                children: ({
                    TransitionProps: o
                }) => g.jsx(No, r({
                    timeout: yo.transitions.duration.shorter
                }, o, ue, {
                    children: g.jsxs(ko, r({}, de, {
                        children: [h, mo ? g.jsx(Ao, r({}, me, {
                            ref: oe
                        })) : null]
                    }))
                }))
            }))]
        })
    }),
    Ae = Ne;
export {
    Ae as T
};
//# sourceMappingURL=Tooltip.-lmH7J9G.min.js.map