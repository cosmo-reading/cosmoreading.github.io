const m = "onesignal-sdk",
    c = "https://cdn.onesignal.com/sdks/OneSignalSDK.js",
    a = [];
let h = !1,
    s = !1;
const o = () => !!window.OneSignal,
    d = (i, r) => {
        h = !0, window.OneSignal = window.OneSignal || [], window.OneSignal.push(() => {
            window.OneSignal.init(r)
        }), window.OneSignal.push(() => {
            g(), i()
        })
    },
    p = i => {
        s = !0, g(), i()
    },
    g = () => {
        a.forEach(i => {
            const {
                name: r,
                args: e,
                promiseResolver: n
            } = i;
            n ? w[r](...e).then(t => {
                n(t)
            }) : w[r](...e)
        })
    },
    f = i => new Promise(r => {
        if (h) {
            r();
            return
        }
        if (!i || !i.appId) throw new Error("You need to provide your OneSignal appId.");
        if (!document) {
            r();
            return
        }
        const e = document.createElement("script");
        e.id = m, e.src = c, e.async = !0, e.onload = () => {
            d(r, i)
        }, e.onerror = () => {
            p(r)
        }, document.head.appendChild(e)
    });

function S(i, r) {
    if (!o()) {
        a.push({
            name: "on",
            args: arguments
        });
        return
    }
    window.OneSignal.push(() => {
        window.OneSignal.on(i, r)
    })
}

function l(i, r) {
    if (!o()) {
        a.push({
            name: "off",
            args: arguments
        });
        return
    }
    window.OneSignal.push(() => {
        window.OneSignal.off(i, r)
    })
}

function O(i, r) {
    if (!o()) {
        a.push({
            name: "once",
            args: arguments
        });
        return
    }
    window.OneSignal.push(() => {
        window.OneSignal.once(i, r)
    })
}

function P(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "isPushNotificationsEnabled",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.isPushNotificationsEnabled(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function R(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showHttpPrompt",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showHttpPrompt(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function y(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "registerForPushNotifications",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.registerForPushNotifications(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function E(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "setDefaultNotificationUrl",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.setDefaultNotificationUrl(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function I(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "setDefaultTitle",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.setDefaultTitle(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function N(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "getTags",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getTags(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function T(i, r, e) {
    return new Promise((n, t) => {
        if (s) {
            n();
            return
        }
        if (!o()) {
            a.push({
                name: "sendTag",
                args: arguments,
                promiseResolver: n
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.sendTag(i, r, e).then(u => n(u)).catch(u => t(u))
            })
        } catch (u) {
            t(u)
        }
    })
}

function U(i, r) {
    return new Promise((e, n) => {
        if (s) {
            e();
            return
        }
        if (!o()) {
            a.push({
                name: "sendTags",
                args: arguments,
                promiseResolver: e
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.sendTags(i, r).then(t => e(t)).catch(t => n(t))
            })
        } catch (t) {
            n(t)
        }
    })
}

function b(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "deleteTag",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.deleteTag(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function x(i, r) {
    return new Promise((e, n) => {
        if (s) {
            e();
            return
        }
        if (!o()) {
            a.push({
                name: "deleteTags",
                args: arguments,
                promiseResolver: e
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.deleteTags(i, r).then(t => e(t)).catch(t => n(t))
            })
        } catch (t) {
            n(t)
        }
    })
}

function C(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "addListenerForNotificationOpened",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.addListenerForNotificationOpened(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function D(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "setSubscription",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.setSubscription(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function F(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showHttpPermissionRequest",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showHttpPermissionRequest(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function M() {
    return new Promise((i, r) => {
        if (s) {
            i();
            return
        }
        if (!o()) {
            a.push({
                name: "showNativePrompt",
                args: arguments,
                promiseResolver: i
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showNativePrompt().then(e => i(e)).catch(e => r(e))
            })
        } catch (e) {
            r(e)
        }
    })
}

function H(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showSlidedownPrompt",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showSlidedownPrompt(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function L(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showCategorySlidedown",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showCategorySlidedown(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function A(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showSmsSlidedown",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showSmsSlidedown(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function _(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showEmailSlidedown",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showEmailSlidedown(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function q(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "showSmsAndEmailSlidedown",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.showSmsAndEmailSlidedown(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function k(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "getNotificationPermission",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getNotificationPermission(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function G(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "getUserId",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getUserId(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function K(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "getSubscription",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getSubscription(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function Q(i, r) {
    return new Promise((e, n) => {
        if (s) {
            e();
            return
        }
        if (!o()) {
            a.push({
                name: "setEmail",
                args: arguments,
                promiseResolver: e
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.setEmail(i, r).then(t => e(t)).catch(t => n(t))
            })
        } catch (t) {
            n(t)
        }
    })
}

function z(i, r) {
    return new Promise((e, n) => {
        if (s) {
            e();
            return
        }
        if (!o()) {
            a.push({
                name: "setSMSNumber",
                args: arguments,
                promiseResolver: e
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.setSMSNumber(i, r).then(t => e(t)).catch(t => n(t))
            })
        } catch (t) {
            n(t)
        }
    })
}

function Y() {
    return new Promise((i, r) => {
        if (s) {
            i();
            return
        }
        if (!o()) {
            a.push({
                name: "logoutEmail",
                args: arguments,
                promiseResolver: i
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.logoutEmail().then(e => i(e)).catch(e => r(e))
            })
        } catch (e) {
            r(e)
        }
    })
}

function B() {
    return new Promise((i, r) => {
        if (s) {
            i();
            return
        }
        if (!o()) {
            a.push({
                name: "logoutSMS",
                args: arguments,
                promiseResolver: i
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.logoutSMS().then(e => i(e)).catch(e => r(e))
            })
        } catch (e) {
            r(e)
        }
    })
}

function J(i, r) {
    return new Promise((e, n) => {
        if (s) {
            e();
            return
        }
        if (!o()) {
            a.push({
                name: "setExternalUserId",
                args: arguments,
                promiseResolver: e
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.setExternalUserId(i, r).then(t => e(t)).catch(t => n(t))
            })
        } catch (t) {
            n(t)
        }
    })
}

function V() {
    return new Promise((i, r) => {
        if (s) {
            i();
            return
        }
        if (!o()) {
            a.push({
                name: "removeExternalUserId",
                args: arguments,
                promiseResolver: i
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.removeExternalUserId().then(e => i(e)).catch(e => r(e))
            })
        } catch (e) {
            r(e)
        }
    })
}

function W() {
    return new Promise((i, r) => {
        if (s) {
            i();
            return
        }
        if (!o()) {
            a.push({
                name: "getExternalUserId",
                args: arguments,
                promiseResolver: i
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getExternalUserId().then(e => i(e)).catch(e => r(e))
            })
        } catch (e) {
            r(e)
        }
    })
}

function X(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "provideUserConsent",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.provideUserConsent(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function Z(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "getEmailId",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getEmailId(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function $(i) {
    return new Promise((r, e) => {
        if (s) {
            r();
            return
        }
        if (!o()) {
            a.push({
                name: "getSMSId",
                args: arguments,
                promiseResolver: r
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.getSMSId(i).then(n => r(n)).catch(n => e(n))
            })
        } catch (n) {
            e(n)
        }
    })
}

function v(i, r) {
    return new Promise((e, n) => {
        if (s) {
            e();
            return
        }
        if (!o()) {
            a.push({
                name: "sendOutcome",
                args: arguments,
                promiseResolver: e
            });
            return
        }
        try {
            window.OneSignal.push(() => {
                window.OneSignal.sendOutcome(i, r).then(t => e(t)).catch(t => n(t))
            })
        } catch (t) {
            n(t)
        }
    })
}
const w = {
    init: f,
    on: S,
    off: l,
    once: O,
    isPushNotificationsEnabled: P,
    showHttpPrompt: R,
    registerForPushNotifications: y,
    setDefaultNotificationUrl: E,
    setDefaultTitle: I,
    getTags: N,
    sendTag: T,
    sendTags: U,
    deleteTag: b,
    deleteTags: x,
    addListenerForNotificationOpened: C,
    setSubscription: D,
    showHttpPermissionRequest: F,
    showNativePrompt: M,
    showSlidedownPrompt: H,
    showCategorySlidedown: L,
    showSmsSlidedown: A,
    showEmailSlidedown: _,
    showSmsAndEmailSlidedown: q,
    getNotificationPermission: k,
    getUserId: G,
    getSubscription: K,
    setEmail: Q,
    setSMSNumber: z,
    logoutEmail: Y,
    logoutSMS: B,
    setExternalUserId: J,
    removeExternalUserId: V,
    getExternalUserId: W,
    provideUserConsent: X,
    getEmailId: Z,
    getSMSId: $,
    sendOutcome: v
};
export {
    w as
    default
};
//# sourceMappingURL=index.es.B-IakeR7.min.js.map