import {
    u as v,
    M as o,
    a3 as u,
    N as l,
    ah as c,
    cj as p,
    ai as d,
    ag as B,
    w as m
} from "./app.BSN4W8HM.min.js";
var w = (e => (e[e.None = 0] = "None", e[e.Name = 1] = "Name", e[e.LastRead = 2] = "LastRead", e[e.LatestRelease = 3] = "LatestRelease", e))(w || {}),
    T = (e => (e[e.ASC = 0] = "ASC", e[e.DESC = 1] = "DESC", e))(T || {}),
    r = (e => (e[e.Current = 0] = "Current", e[e.Completed = 1] = "Completed", e[e.Dropped = 3] = "Dropped", e[e.OnHold = 4] = "OnHold", e[e.Manual = 5] = "Manual", e))(r || {});
class g extends o {
    constructor() {
        super("wuxiaworld.api.v2.GetBookmarksRequest", [{
            no: 1,
            name: "listType",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.ReadingListType", r]
        }, {
            no: 2,
            name: "novelId",
            kind: "scalar",
            oneof: "selector",
            T: 5
        }, {
            no: 3,
            name: "novelSlug",
            kind: "scalar",
            oneof: "selector",
            T: 9
        }, {
            no: 4,
            name: "pageInfo",
            kind: "message",
            oneof: "pagination",
            T: () => u
        }, {
            no: 5,
            name: "cursor",
            kind: "message",
            oneof: "pagination",
            T: () => R
        }, {
            no: 6,
            name: "sortBy",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.GetBookmarksRequest.SortBy", w]
        }, {
            no: 7,
            name: "sortDirection",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.GetBookmarksRequest.SortDirection", T]
        }])
    }
}
const h = new g;
class x extends o {
    constructor() {
        super("wuxiaworld.api.v2.GetBookmarksRequest.CursorRequest", [{
            no: 1,
            name: "chapterOffset",
            kind: "scalar",
            T: 5
        }, {
            no: 2,
            name: "count",
            kind: "scalar",
            T: 5,
            options: {
                "wuxiaworld.api.v2.range": {
                    max: {
                        value: 100
                    }
                }
            }
        }])
    }
}
const R = new x;
class I extends o {
    constructor() {
        super("wuxiaworld.api.v2.GetBookmarksResponse", [{
            no: 1,
            name: "items",
            kind: "message",
            repeat: 1,
            T: () => k
        }, {
            no: 2,
            name: "novels",
            kind: "message",
            repeat: 1,
            T: () => l
        }, {
            no: 3,
            name: "pageInfo",
            kind: "message",
            oneof: "pagination",
            T: () => c
        }, {
            no: 4,
            name: "cursor",
            kind: "message",
            oneof: "pagination",
            T: () => C
        }])
    }
}
const f = new I;
class y extends o {
    constructor() {
        super("wuxiaworld.api.v2.GetBookmarksResponse.CursorResponse", [{
            no: 1,
            name: "chapterOffset",
            kind: "scalar",
            T: 5
        }, {
            no: 2,
            name: "total",
            kind: "scalar",
            T: 5
        }])
    }
}
const C = new y;
class N extends o {
    constructor() {
        super("wuxiaworld.api.v2.AddBookmarkRequest", [{
            no: 1,
            name: "chapterId",
            kind: "scalar",
            T: 5
        }, {
            no: 2,
            name: "listType",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.ReadingListType", r]
        }])
    }
}
const q = new N;
class O extends o {
    constructor() {
        super("wuxiaworld.api.v2.AddBookmarkResponse", [{
            no: 1,
            name: "result",
            kind: "scalar",
            T: 8
        }, {
            no: 2,
            name: "previousBookmark",
            kind: "message",
            T: () => k
        }, {
            no: 3,
            name: "currentBookmark",
            kind: "message",
            T: () => k
        }])
    }
}
const S = new O;
class G extends o {
    constructor() {
        super("wuxiaworld.api.v2.SetBookmarkSettingsRequest", [{
            no: 1,
            name: "novelId",
            kind: "scalar",
            T: 5
        }, {
            no: 2,
            name: "notificationsEnabled",
            kind: "message",
            T: () => p
        }, {
            no: 3,
            name: "locked",
            kind: "message",
            T: () => p
        }])
    }
}
const $ = new G;
class A extends o {
    constructor() {
        super("wuxiaworld.api.v2.SetBookmarkSettingsResponse", [{
            no: 1,
            name: "result",
            kind: "scalar",
            T: 8
        }])
    }
}
const D = new A;
class _ extends o {
    constructor() {
        super("wuxiaworld.api.v2.DeleteBookmarkRequest", [{
            no: 1,
            name: "novelId",
            kind: "scalar",
            oneof: "id",
            T: 5
        }, {
            no: 2,
            name: "chapterId",
            kind: "scalar",
            oneof: "id",
            T: 5
        }, {
            no: 3,
            name: "listType",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.ReadingListType", r]
        }])
    }
}
const E = new _;
class M extends o {
    constructor() {
        super("wuxiaworld.api.v2.DeleteBookmarkResponse", [{
            no: 1,
            name: "result",
            kind: "scalar",
            T: 8
        }])
    }
}
const b = new M;
class H extends o {
    constructor() {
        super("wuxiaworld.api.v2.GetBookmarkedNovelsRequest", [{
            no: 1,
            name: "listType",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.ReadingListType", r]
        }, {
            no: 2,
            name: "pageInfo",
            kind: "message",
            T: () => u
        }])
    }
}
const P = new H;
class j extends o {
    constructor() {
        super("wuxiaworld.api.v2.GetBookmarkedNovelsResponse", [{
            no: 1,
            name: "items",
            kind: "message",
            repeat: 1,
            T: () => l
        }, {
            no: 2,
            name: "pageInfo",
            kind: "message",
            T: () => c
        }])
    }
}
const V = new j;
class z extends o {
    constructor() {
        super("wuxiaworld.api.v2.BookmarkItem", [{
            no: 1,
            name: "novelId",
            kind: "scalar",
            T: 5
        }, {
            no: 2,
            name: "chapter",
            kind: "message",
            T: () => d
        }, {
            no: 3,
            name: "readAt",
            kind: "message",
            T: () => B
        }, {
            no: 4,
            name: "locked",
            kind: "scalar",
            T: 8
        }, {
            no: 5,
            name: "notificationsEnabled",
            kind: "scalar",
            T: 8
        }, {
            no: 6,
            name: "latestChapter",
            kind: "message",
            T: () => d
        }, {
            no: 7,
            name: "listType",
            kind: "enum",
            T: () => ["wuxiaworld.api.v2.ReadingListType", r]
        }])
    }
}
const k = new z,
    i = new v("wuxiaworld.api.v2.Bookmarks", [{
        name: "GetBookmarks",
        options: {},
        I: h,
        O: f
    }, {
        name: "GetBookmarkedNovels",
        options: {},
        I: P,
        O: V
    }, {
        name: "AddBookmark",
        options: {},
        I: q,
        O: S
    }, {
        name: "SetBookmarkSettings",
        options: {},
        I: $,
        O: D
    }, {
        name: "DeleteBookmark",
        options: {},
        I: E,
        O: b
    }]);
class J {
    constructor(s) {
        this._transport = s, this.typeName = i.typeName, this.methods = i.methods, this.options = i.options
    }
    getBookmarks(s, n) {
        const a = this.methods[0],
            t = this._transport.mergeOptions(n);
        return m("unary", this._transport, a, t, s)
    }
    getBookmarkedNovels(s, n) {
        const a = this.methods[1],
            t = this._transport.mergeOptions(n);
        return m("unary", this._transport, a, t, s)
    }
    addBookmark(s, n) {
        const a = this.methods[2],
            t = this._transport.mergeOptions(n);
        return m("unary", this._transport, a, t, s)
    }
    setBookmarkSettings(s, n) {
        const a = this.methods[3],
            t = this._transport.mergeOptions(n);
        return m("unary", this._transport, a, t, s)
    }
    deleteBookmark(s, n) {
        const a = this.methods[4],
            t = this._transport.mergeOptions(n);
        return m("unary", this._transport, a, t, s)
    }
}
export {
    q as A, J as B, E as D, h as G, r as R, $ as S, T as a, w as b, P as c
};
//# sourceMappingURL=bookmarks.client.BWXN1Pxg.min.js.map